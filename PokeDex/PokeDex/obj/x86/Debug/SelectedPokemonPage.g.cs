#pragma checksum "C:\Users\Jacob Mabey\Documents\Intro Software Projects\Team-Name-Project\PokeDex\PokeDex\SelectedPokemonPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "24BCC76DC78C9B306D9E3E9BEB0557AD"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PokeDex
{
    partial class SelectedPokemonPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Nullable<global::System.Boolean>) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Nullable<global::System.Boolean>), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(global::Windows.UI.Xaml.Media.ImageBrush obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.ImageSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SelectedPokemonPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISelectedPokemonPage_Bindings
        {
            private global::PokeDex.SelectedPokemonPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.RadioButton obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;
            private global::Windows.UI.Xaml.Controls.TextBlock obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj28;
            private global::Windows.UI.Xaml.Controls.TextBlock obj29;
            private global::Windows.UI.Xaml.Controls.TextBlock obj30;
            private global::Windows.UI.Xaml.Controls.TextBlock obj31;
            private global::Windows.UI.Xaml.Controls.TextBlock obj32;
            private global::Windows.UI.Xaml.Controls.TextBlock obj34;
            private global::Windows.UI.Xaml.Controls.Image obj35;
            private global::Windows.UI.Xaml.Controls.TextBlock obj36;
            private global::Windows.UI.Xaml.Controls.TextBlock obj38;
            private global::Windows.UI.Xaml.Controls.Image obj39;
            private global::Windows.UI.Xaml.Controls.TextBlock obj40;
            private global::Windows.UI.Xaml.Controls.TextBlock obj41;
            private global::Windows.UI.Xaml.Controls.TextBlock obj42;
            private global::Windows.UI.Xaml.Controls.TextBlock obj43;
            private global::Windows.UI.Xaml.Controls.Image obj44;
            private global::Windows.UI.Xaml.Controls.TextBlock obj45;
            private global::Windows.UI.Xaml.Controls.TextBlock obj48;
            private global::Windows.UI.Xaml.Controls.TextBlock obj49;
            private global::Windows.UI.Xaml.Controls.Image obj50;
            private global::Windows.UI.Xaml.Controls.Image obj51;
            private global::Windows.UI.Xaml.Controls.TextBlock obj52;
            private global::Windows.UI.Xaml.Controls.TextBlock obj53;
            private global::Windows.UI.Xaml.Controls.TextBlock obj54;
            private global::Windows.UI.Xaml.Media.ImageBrush obj55;

            public SelectedPokemonPage_obj1_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // SelectedPokemonPage.xaml line 29
                        this.obj6 = (global::Windows.UI.Xaml.Controls.RadioButton)target;
                        break;
                    case 13: // SelectedPokemonPage.xaml line 186
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 17: // SelectedPokemonPage.xaml line 220
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 18: // SelectedPokemonPage.xaml line 229
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 27: // SelectedPokemonPage.xaml line 381
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 28: // SelectedPokemonPage.xaml line 388
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 29: // SelectedPokemonPage.xaml line 396
                        this.obj29 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 30: // SelectedPokemonPage.xaml line 404
                        this.obj30 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 31: // SelectedPokemonPage.xaml line 412
                        this.obj31 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 32: // SelectedPokemonPage.xaml line 420
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 34: // SelectedPokemonPage.xaml line 283
                        this.obj34 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 35: // SelectedPokemonPage.xaml line 300
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 36: // SelectedPokemonPage.xaml line 305
                        this.obj36 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 38: // SelectedPokemonPage.xaml line 330
                        this.obj38 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 39: // SelectedPokemonPage.xaml line 326
                        this.obj39 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 40: // SelectedPokemonPage.xaml line 316
                        this.obj40 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 41: // SelectedPokemonPage.xaml line 318
                        this.obj41 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 42: // SelectedPokemonPage.xaml line 294
                        this.obj42 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 43: // SelectedPokemonPage.xaml line 296
                        this.obj43 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 44: // SelectedPokemonPage.xaml line 279
                        this.obj44 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 45: // SelectedPokemonPage.xaml line 248
                        this.obj45 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 48: // SelectedPokemonPage.xaml line 146
                        this.obj48 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 49: // SelectedPokemonPage.xaml line 152
                        this.obj49 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 50: // SelectedPokemonPage.xaml line 107
                        this.obj50 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 51: // SelectedPokemonPage.xaml line 112
                        this.obj51 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 52: // SelectedPokemonPage.xaml line 72
                        this.obj52 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 53: // SelectedPokemonPage.xaml line 79
                        this.obj53 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 54: // SelectedPokemonPage.xaml line 88
                        this.obj54 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 55: // SelectedPokemonPage.xaml line 48
                        this.obj55 = (global::Windows.UI.Xaml.Media.ImageBrush)target;
                        break;
                    default:
                        break;
                }
            }

            // ISelectedPokemonPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::PokeDex.SelectedPokemonPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::PokeDex.SelectedPokemonPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon(obj.SelectedPokemon, phase);
                    }
                }
            }
            private void Update_SelectedPokemon(global::Pokedata.Pokemon obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon_IsLegendary(obj.IsLegendary, phase);
                        this.Update_SelectedPokemon_Abilities(obj.Abilities, phase);
                        this.Update_SelectedPokemon_GenderRatio(obj.GenderRatio, phase);
                        this.Update_SelectedPokemon_BaseStats(obj.BaseStats, phase);
                        this.Update_SelectedPokemon_EvolveFrom(obj.EvolveFrom, phase);
                        this.Update_SelectedPokemon_ImageSource(obj.ImageSource, phase);
                        this.Update_SelectedPokemon_Name(obj.Name, phase);
                        this.Update_SelectedPokemon_EvolveTo(obj.EvolveTo, phase);
                        this.Update_SelectedPokemon_EvolveToAction(obj.EvolveToAction, phase);
                        this.Update_SelectedPokemon_EvolveFromAction(obj.EvolveFromAction, phase);
                        this.Update_SelectedPokemon_Description(obj.Description, phase);
                        this.Update_SelectedPokemon_Height(obj.Height, phase);
                        this.Update_SelectedPokemon_Weight(obj.Weight, phase);
                        this.Update_SelectedPokemon_DexNumber(obj.DexNumber, phase);
                        this.Update_SelectedPokemon_Category(obj.Category, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 107
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj50, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("TypeConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), "1", null), null);
                    // SelectedPokemonPage.xaml line 112
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj51, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("TypeConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), "2", null), null);
                }
            }
            private void Update_SelectedPokemon_IsLegendary(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 29
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj6, obj, null);
                }
            }
            private void Update_SelectedPokemon_Abilities(global::System.Collections.Generic.List<global::Pokedata.Ability> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 186
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, (global::System.String)this.LookupConverter("ListToAbilitiesConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_SelectedPokemon_GenderRatio(global::Pokedata.GenderRatio obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon_GenderRatio_Male(obj.Male, phase);
                        this.Update_SelectedPokemon_GenderRatio_Female(obj.Female, phase);
                    }
                }
            }
            private void Update_SelectedPokemon_GenderRatio_Male(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 220
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_GenderRatio_Female(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 229
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_BaseStats(global::Pokedata.Stats obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon_BaseStats_HP(obj.HP, phase);
                        this.Update_SelectedPokemon_BaseStats_Attack(obj.Attack, phase);
                        this.Update_SelectedPokemon_BaseStats_Defense(obj.Defense, phase);
                        this.Update_SelectedPokemon_BaseStats_SpecialAttack(obj.SpecialAttack, phase);
                        this.Update_SelectedPokemon_BaseStats_SpecialDefense(obj.SpecialDefense, phase);
                        this.Update_SelectedPokemon_BaseStats_Speed(obj.Speed, phase);
                    }
                }
            }
            private void Update_SelectedPokemon_BaseStats_HP(global::System.Byte obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 381
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj27, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_BaseStats_Attack(global::System.Byte obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 388
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj28, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_BaseStats_Defense(global::System.Byte obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 396
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj29, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_BaseStats_SpecialAttack(global::System.Byte obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 404
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj30, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_BaseStats_SpecialDefense(global::System.Byte obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 412
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj31, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_BaseStats_Speed(global::System.Byte obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 420
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj32, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_EvolveFrom(global::Pokedata.Pokemon obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon_EvolveFrom_Name(obj.Name, phase);
                        this.Update_SelectedPokemon_EvolveFrom_ImageSource(obj.ImageSource, phase);
                    }
                }
            }
            private void Update_SelectedPokemon_EvolveFrom_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 283
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj34, obj, null);
                }
            }
            private void Update_SelectedPokemon_ImageSource(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 300
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj35, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                    // SelectedPokemonPage.xaml line 48
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(this.obj55, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
            private void Update_SelectedPokemon_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 305
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj36, obj, null);
                    // SelectedPokemonPage.xaml line 79
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj53, obj, null);
                }
            }
            private void Update_SelectedPokemon_EvolveTo(global::Pokedata.Pokemon obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon_EvolveTo_Name(obj.Name, phase);
                        this.Update_SelectedPokemon_EvolveTo_ImageSource(obj.ImageSource, phase);
                    }
                }
            }
            private void Update_SelectedPokemon_EvolveTo_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 330
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj38, obj, null);
                }
            }
            private void Update_SelectedPokemon_EvolveTo_ImageSource(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 326
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj39, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
            private void Update_SelectedPokemon_EvolveToAction(global::Pokedata.EvolveAction obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon_EvolveToAction_Task(obj.Task, phase);
                        this.Update_SelectedPokemon_EvolveToAction_ExtraTask(obj.ExtraTask, phase);
                    }
                }
            }
            private void Update_SelectedPokemon_EvolveToAction_Task(global::Pokedata.EvolveTask obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 316
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj40, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_EvolveToAction_ExtraTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 318
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj41, obj, null);
                }
            }
            private void Update_SelectedPokemon_EvolveFromAction(global::Pokedata.EvolveAction obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedPokemon_EvolveFromAction_Task(obj.Task, phase);
                        this.Update_SelectedPokemon_EvolveFromAction_ExtraTask(obj.ExtraTask, phase);
                    }
                }
            }
            private void Update_SelectedPokemon_EvolveFromAction_Task(global::Pokedata.EvolveTask obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 294
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj42, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_EvolveFromAction_ExtraTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 296
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj43, obj, null);
                }
            }
            private void Update_SelectedPokemon_EvolveFrom_ImageSource(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 279
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj44, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
            private void Update_SelectedPokemon_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 248
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj45, obj, null);
                }
            }
            private void Update_SelectedPokemon_Height(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 146
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj48, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_Weight(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 152
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj49, obj.ToString(), null);
                }
            }
            private void Update_SelectedPokemon_DexNumber(global::System.UInt16 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 72
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj52, (global::System.String)this.LookupConverter("DexNumberConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_SelectedPokemon_Category(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SelectedPokemonPage.xaml line 88
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj54, obj, null);
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // SelectedPokemonPage.xaml line 13
                {
                    this.DexNumberConverter = (global::PokeDex.Converters.DexNumberToStringConverter)(target);
                }
                break;
            case 3: // SelectedPokemonPage.xaml line 14
                {
                    this.TypeConverter = (global::PokeDex.Converters.TypeToTypeImageConverter)(target);
                }
                break;
            case 4: // SelectedPokemonPage.xaml line 15
                {
                    this.ListToAbilitiesConverter = (global::PokeDex.Converters.ListToAbilitiesConverter)(target);
                }
                break;
            case 5: // SelectedPokemonPage.xaml line 21
                {
                    this.back = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.back).Click += this.BackButton_Click;
                }
                break;
            case 6: // SelectedPokemonPage.xaml line 29
                {
                    this.legendaryChecked = (global::Windows.UI.Xaml.Controls.RadioButton)(target);
                }
                break;
            case 7: // SelectedPokemonPage.xaml line 42
                {
                    this.pokemonImg = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 8: // SelectedPokemonPage.xaml line 56
                {
                    this.NameAndCategoryGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 9: // SelectedPokemonPage.xaml line 99
                {
                    this.TypesGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 10: // SelectedPokemonPage.xaml line 119
                {
                    this.HeightWeightGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 11: // SelectedPokemonPage.xaml line 171
                {
                    this.abilityBox = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 12: // SelectedPokemonPage.xaml line 178
                {
                    this.potentialAbilities = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 13: // SelectedPokemonPage.xaml line 186
                {
                    this.abilities = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 14: // SelectedPokemonPage.xaml line 195
                {
                    this.genderRatioBox = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 15: // SelectedPokemonPage.xaml line 203
                {
                    this.male = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 16: // SelectedPokemonPage.xaml line 211
                {
                    this.female = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 17: // SelectedPokemonPage.xaml line 220
                {
                    this.maleRatio = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18: // SelectedPokemonPage.xaml line 229
                {
                    this.femaleRatio = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 19: // SelectedPokemonPage.xaml line 240
                {
                    this.pokemonEntryBox = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 20: // SelectedPokemonPage.xaml line 258
                {
                    this.evolutionChartBox = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 21: // SelectedPokemonPage.xaml line 345
                {
                    this.hitPoints = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 22: // SelectedPokemonPage.xaml line 350
                {
                    this.attack = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 23: // SelectedPokemonPage.xaml line 356
                {
                    this.defense = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 24: // SelectedPokemonPage.xaml line 362
                {
                    this.specialAttack = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 25: // SelectedPokemonPage.xaml line 368
                {
                    this.specialDefense = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 26: // SelectedPokemonPage.xaml line 374
                {
                    this.speed = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 27: // SelectedPokemonPage.xaml line 381
                {
                    this.hitPointsStat = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 28: // SelectedPokemonPage.xaml line 388
                {
                    this.attackStat = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 29: // SelectedPokemonPage.xaml line 396
                {
                    this.defenseStat = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 30: // SelectedPokemonPage.xaml line 404
                {
                    this.specialAttackStat = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 31: // SelectedPokemonPage.xaml line 412
                {
                    this.specialDefenseStat = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 32: // SelectedPokemonPage.xaml line 420
                {
                    this.speedStat = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 33: // SelectedPokemonPage.xaml line 275
                {
                    this.evolveFromPokemonButton = (global::Windows.UI.Xaml.Controls.HyperlinkButton)(target);
                    ((global::Windows.UI.Xaml.Controls.HyperlinkButton)this.evolveFromPokemonButton).Click += this.EvolveFromPokemonClick;
                }
                break;
            case 37: // SelectedPokemonPage.xaml line 322
                {
                    this.evolveToPokemonButton = (global::Windows.UI.Xaml.Controls.HyperlinkButton)(target);
                    ((global::Windows.UI.Xaml.Controls.HyperlinkButton)this.evolveToPokemonButton).Click += this.EvolveToPokemonClick;
                }
                break;
            case 46: // SelectedPokemonPage.xaml line 136
                {
                    this.HeightLabel = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 47: // SelectedPokemonPage.xaml line 140
                {
                    this.WeightLabel = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 48: // SelectedPokemonPage.xaml line 146
                {
                    this.HeightValue = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 49: // SelectedPokemonPage.xaml line 152
                {
                    this.WeightValue = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 50: // SelectedPokemonPage.xaml line 107
                {
                    this.type1 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 51: // SelectedPokemonPage.xaml line 112
                {
                    this.type2 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 52: // SelectedPokemonPage.xaml line 72
                {
                    this.pokemonNumber = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 53: // SelectedPokemonPage.xaml line 79
                {
                    this.pokemonName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 54: // SelectedPokemonPage.xaml line 88
                {
                    this.pokemonCategory = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // SelectedPokemonPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SelectedPokemonPage_obj1_Bindings bindings = new SelectedPokemonPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

